import pygame
from random import randrange

lst1 = [0, 0, 0, 0]
lst2 = [0, 0, 0, 0]
lst3 = [0, 0, 0, 0]
CLK = 70
pygame.init()
pygame.display.set_caption('first')
screen = pygame.display.set_mode((800, 600))
one = pygame.transform.rotozoom(pygame.image.load('red.jpg').convert(), 0.5, 0.5)
two = pygame.transform.rotozoom(pygame.image.load('green.jpg').convert(), 0.5, 0.5)


def load_image(name, colorkey=None):
    image = pygame.image.load('buttle.jpg')
    if colorkey is not None:
        image = image.convert()
        if colorkey == -1:
            colorkey = image.get_at((1, 1))
        image.set_colorkey(colorkey)
    else:
        image = image.convert_alpha()
    return image

z = randrange(3)
one_x = 260
one_y = 380
two_x = 260
two_y = 330
q = 0


class buttle1(pygame.sprite.Sprite):
    image = pygame.transform.rotozoom(load_image("buttle.jpg"), 0.5, 0.5)

    def __init__(self, group, x, y):
        super().__init__(group)
        self.image = buttle1.image
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y
        global y1
        y1 = self.rect.y
        self.count = 1

    def update(self, *args):
        if args and args[0].type == pygame.MOUSEBUTTONDOWN and \
                self.rect.collidepoint(args[0].pos):
            global q
            global one_y
            global one_x
            global two_y
            global two_x
            global y1
            if q == 0:
                q = 1
                self.rect.y -= 50
                self.count += 1
                y1 -= 50
                if one_x == 260:
                    one_y -= 50
                    screen.blit(one, (one_x, one_y))
                if two_x == 260:
                    two_y -= 50
                    screen.blit(two, (two_x, two_y))
            elif self.count % 2 == 0:
                self.rect.y += 50
                y1 += 50
                if one_x == 260:
                    one_y += 50
                    screen.blit(one, (one_x, one_y))
                if two_x == 260:
                    two_y += 50
                    screen.blit(two, (two_x, two_y))
                q = 0
                self.count += 1
            else:
                global y3
                global y2
                if one_x == 460 and two_x != 460 or one_x == 360 and two_x != 360:
                    one_x = 260
                    one_y += 50
                    screen.blit(one, (one_x, one_y))
                    pygame.display.flip()
                if one_x != 460 and two_x == 460 or one_x != 360 and two_x == 360:
                    two_x = 260
                    two_y += 50
                    screen.blit(two, (two_x, two_y))
                    pygame.display.flip()
                if y3 == 150:
                    y3 += 50
                elif y2 == 150:
                    y2 += 50

class buttle2(pygame.sprite.Sprite):
    image = pygame.transform.rotozoom(load_image("buttle.jpg"), 0.5, 0.5)

    def __init__(self, group, x, y):
        super().__init__(group)
        self.image = buttle2.image
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y
        global y2
        y2 = self.rect.y
        self.count = 1

    def update(self, *args):
        if args and args[0].type == pygame.MOUSEBUTTONDOWN and \
                self.rect.collidepoint(args[0].pos):
            global q
            global one_x
            global one_y
            global two_x
            global two_y
            global y2
            if q == 0:
                q = 1
                self.rect.y -= 50
                y2 -= 50
                self.count += 1
                if one_x == 360:
                    one_y -= 50
                    screen.blit(one, (one_x, one_y))
                if two_x == 360:
                    two_y -= 50
                    screen.blit(two, (two_x, two_y))
            elif self.count % 2 == 0:
                self.rect.y += 50
                y2 += 50
                q = 0
                self.count += 1
                if one_x == 360:
                    one_y += 50
                    screen.blit(one, (one_x, one_y))
                if two_x == 360:
                    two_y += 50
                    screen.blit(two, (two_x, two_y))
            else:
                global y1
                global y3
                if one_x == 260 and two_x != 260 or one_x == 460 and two_x != 460:
                    one_x = 360
                    one_y += 50
                    screen.blit(one, (one_x, one_y))
                    pygame.display.flip()
                if one_x != 460 and two_x == 460 or one_x != 360 and two_x == 360:
                    two_x = 260
                    two_y += 50
                    screen.blit(two, (two_x, two_y))
                    pygame.display.flip()
                if y1 == 150:
                    y1 += 50
                elif y3 == 150:
                    y3 += 50

class buttle3(pygame.sprite.Sprite):
    image = pygame.transform.rotozoom(load_image("buttle.jpg"), 0.5, 0.5)

    def __init__(self, group, x, y):
        super().__init__(group)
        self.image = buttle3.image
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y
        global y3
        y3 = self.rect.y
        self.count = 1

    def update(self, *args):
        if args and args[0].type == pygame.MOUSEBUTTONDOWN and \
                self.rect.collidepoint(args[0].pos):
            global q
            global y3
            global one_x
            global one_y
            global two_x
            global two_y
            if q == 0:
                q = 1
                self.rect.y -= 50
                y3 -= 50
                self.count += 1
                if one_x == 460:
                    one_y -= 50
                    screen.blit(one, (one_x, one_y))
                if two_x == 460:
                    two_y -= 50
                    screen.blit(two, (two_x, two_y))
            elif self.count % 2 == 0:
                self.rect.y += 50
                y3 -= 50
                q = 0
                self.count += 1
                if one_x == 460:
                    one_y += 50
                    screen.blit(one, (one_x, one_y))
                if two_x == 460:
                    two_y += 50
                    screen.blit(two, (two_x, two_y))
            else:
                global y1
                global y2
                if one_x == 260 and two_x != 260 or one_x == 360 and two_x != 360:
                    one_x = 460
                    one_y += 50
                    screen.blit(one, (one_x, one_y))
                    pygame.display.flip()
                if y1 == 150:
                    y1 += 50
                elif y2 == 150:
                    y2 += 50


def run():
    while True:
        global one_x
        global one_y
        screen.blit(one, (one_x, one_y))
        screen.blit(two, (two_x, two_y))
        pygame.display.flip()
        clock.tick(CLK)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            all_sprites.update(event)
        draw()


def draw():
    screen.fill("black")
    all_sprites.update()
    all_sprites.draw(screen)
    pygame.display.flip()


if __name__ == "__main__":
    clock = pygame.time.Clock()
    all_sprites = pygame.sprite.Group()
    bomb_image = load_image("buttle.jpg")
    buttle1(all_sprites, 250, 200)
    buttle2(all_sprites, 350, 200)
    buttle3(all_sprites, 450, 200)
    run()
    pygame.quit()

